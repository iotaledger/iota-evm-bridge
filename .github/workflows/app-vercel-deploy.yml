name: App Vercel Deploy

on:
    workflow_call:
        inputs:
            PRODUCTION:
                type: boolean
                required: true
        secrets:
            VERCEL_TOKEN:
                required: true
            VERCEL_ORG_ID:
                required: true
            VERCEL_PROJECT_ID:
                required: true
            VERCEL_SCOPE:
                required: true

env:
    VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
    VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
    VERCEL_ENVIRONMENT: ${{ inputs.PRODUCTION && 'production' || 'preview' }}
    VITE_NETWORK_NAME: ${{ secrets.NETWORK_NAME }}
    VITE_NETWORK_RPC_L2: ${{ secrets.NETWORK_RPC_L2 }}
    VITE_WALLET_CONNECT_L2_PROJECT_ID: ${{ secrets.WALLET_CONNECT_L2_PROJECT_ID }}

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: ${{ inputs.PRODUCTION != true }}

jobs:
    vercel-deploy:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            pull-requests: write
            deployments: write
        steps:
            - uses: actions/checkout@v3
            - uses: pnpm/action-setup@fe02b34f77f8bc703788d5817da081398fad5dd2 # pin@v4.0.0

            - name: Install Nodejs
              uses: actions/setup-node@60edb5dd545a775178f52524783378180af0d1f8 # pin@v4.0.2
              with:
                  node-version: '20'
                  cache: 'pnpm'

            - name: Install Vercel CLI
              run: pnpm add --global vercel@canary

            - name: Setup Vercel Flags
              id: setup_vercel_flags
              run: |
                  echo "VERCEL_FLAGS=--token=${{ secrets.VERCEL_TOKEN }} --scope=${{ secrets.VERCEL_SCOPE }}" >> $GITHUB_OUTPUT
                  if [[ "${{ inputs.PRODUCTION }}" == "true" ]]; then
                      echo "PROD_FLAG=--prod" >> $GITHUB_OUTPUT
                  else
                      echo "PROD_FLAG=" >> $GITHUB_OUTPUT
                  fi

            - name: Install Project Dependencies
              run: pnpm install --frozen-lockfile

            - name: Pull Vercel Environment Information
              run: vercel pull ${{ steps.setup_vercel_flags.outputs.VERCEL_FLAGS }} --yes --environment=${{ env.VERCEL_ENVIRONMENT }}

            - name: Build Project
              run: vercel build ${{ steps.setup_vercel_flags.outputs.VERCEL_FLAGS }} ${{ steps.setup_vercel_flags.outputs.PROD_FLAG }}

            - name: Deploy to Vercel Action
              uses: BetaHuhn/deploy-to-vercel-action@v1
              with:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
                  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
                  VERCEL_SCOPE: ${{ secrets.VERCEL_SCOPE }}
                  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
                  PRODUCTION: ${{ inputs.PRODUCTION }}
                  PREBUILT: true
                  DELETE_EXISTING_COMMENT: false
